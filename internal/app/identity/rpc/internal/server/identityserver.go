// Code generated by goctl. DO NOT EDIT!
// Source: identity.proto

package server

import (
	"context"
	identitypb2 "fgzs/internal/app/identity/rpc/identitypb"
	logic2 "fgzs/internal/app/identity/rpc/internal/logic"
	"fgzs/internal/app/identity/rpc/internal/svc"
)

type IdentityServer struct {
	svcCtx *svc.ServiceContext
	identitypb2.UnimplementedIdentityServer
}

func NewIdentityServer(svcCtx *svc.ServiceContext) *IdentityServer {
	return &IdentityServer{
		svcCtx: svcCtx,
	}
}

// 生成token
func (s *IdentityServer) GenerateToken(ctx context.Context, in *identitypb2.GenerateTokenReq) (*identitypb2.GenerateTokenResp, error) {
	l := logic2.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

// 验证token
func (s *IdentityServer) ValidateToken(ctx context.Context, in *identitypb2.ValidateTokenReq) (*identitypb2.ValidateTokenResp, error) {
	l := logic2.NewValidateTokenLogic(ctx, s.svcCtx)
	return l.ValidateToken(in)
}

// 清除token
func (s *IdentityServer) ClearToken(ctx context.Context, in *identitypb2.ClearTokenReq) (*identitypb2.ClearTokenResp, error) {
	l := logic2.NewClearTokenLogic(ctx, s.svcCtx)
	return l.ClearToken(in)
}
